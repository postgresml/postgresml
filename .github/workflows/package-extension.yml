name: Build PostgresML Rust package

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run:
        sudo apt update
        sudo apt install -y ruby curl
        curl -sLO https://github.com/deb-s3/deb-s3/releases/download/0.11.4/deb-s3-0.11.4.gem
        sudo gem install deb-s3-0.11.4.gem
    - name: Build package
      run:
        docker run -v $(pwd):/app levkk/postgresml:build cargo pgx package --pg-control /usr/lib/postgresql/11/bin/pg_config
        docker run -v $(pwd):/app levkk/postgresml:build cargo pgx package --pg-control /usr/lib/postgresql/12/bin/pg_config
        docker run -v $(pwd):/app levkk/postgresml:build cargo pgx package --pg-control /usr/lib/postgresql/13/bin/pg_config
        docker run -v $(pwd):/app levkk/postgresml:build cargo pgx package --pg-control /usr/lib/postgresql/14/bin/pg_config
        docker run -v $(pwd):/app levkk/postgresml:build cargo pgx package --pg-control /usr/lib/postgresql/15/bin/pg_config
    # - name: Publish package
    #   env:
    #     AWS_ACCESS_KEY_ID: ${{ vars.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
    #   working-directory: postgresml/pgml-extension
    #   run: |
    #     if [[ $(uname -a) == *"aarch64"* ]]; then
    #         ARCH="arm64"
    #     else
    #         ARCH="amd64"
    #     fi

    #     deb-s3 upload \
    #       --bucket apt.postgresml.org \
    #       postgresql-pgml-${{ inputs.postgresVersion }}_${{ inputs.packageVersion }}-ubuntu${{ inputs.ubuntuVersion }}-${ARCH}.deb \
    #       --codename ${{ inputs.ubuntuName }}
